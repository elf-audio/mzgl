import os
import sys
import subprocess


# generate with  python3 ./scripts/do_default_opengl_shaders.py lib/mzgl/gl/api/OpenGL/shaders > lib/mzgl/gl/api/OpenGL/OpenGLDefaultShaders.h

shaderDir = sys.argv[1]

shaderFiles = []
for root, dirs, files in os.walk(shaderDir):

    for file in files:
        if file.endswith(".vert"):
         
            shaderName = os.path.splitext(os.path.basename(file))[0]
            obj = {}
            obj["name"] = shaderName
            obj["vert"] = shaderDir + "/" + shaderName + ".vert"
            obj["frag"] = shaderDir + "/" + shaderName + ".frag"
            shaderFiles.append(obj)

# print(shaderFiles)


# print(shaderNames)
def readFile(path):
    return open(path).read()


hContents = """
// auto-generated by do_default_opengl_shaders.py

// clang-format off
#pragma once
#define OPENGL_STRINGIFY(x)      #x

"""

for shader in shaderFiles:
    hContents += """
std::string """+shader["name"]+"""VertSrc = OPENGL_STRINGIFY(
"""+readFile(shader["vert"]) + """
);
std::string """+shader["name"]+"""FragSrc = OPENGL_STRINGIFY(
"""+readFile(shader["frag"]) + """
);
"""

hContents += """

// clang-format on

"""
print(hContents)

# print(readFile("CMakeLists.txt"))